---
import Amount from '@/components/Amount';
import { shoes } from '@/consts/shoes';
import Layout from '@/layouts/Layout.astro';
import AddToCart from '@/components/AddToCart.astro';

export async function getStaticPaths() {
  return shoes.map((shoe) => ({
    params: { id: shoe.id },
  }));
}

const { id } = Astro.params;

const shoe = shoes.find((shoe) => shoe.id === id);
if (!shoe) return Astro.redirect('/');

const SIZES = ['38', '40', '40.5', '41', '42', '42.5', '44', '44.5'];
---

<Layout>
  <article class="flex items-center justify-center mt-36">
    <div class="flex bg-light mx-16 mt-4 rounded-2xl p-4 gap-4">
      <picture
        class="max-w-100 flex flex-col gap-4 justify-center items-center"
      >
        {
          shoe.images[1] && (
            <img
              class="bg-white rounded-2xl"
              src={shoe.images[1]}
              alt={`imagen del zapato ${shoe.name} 2`}
            />
          )
        }
        {
          shoe.images[2] && (
            <img
              class="bg-white rounded-2xl"
              src={shoe.images[2]}
              alt={`imagen del zapato ${shoe.name} 3`}
            />
          )
        }
      </picture>
      <picture class="bg-white rounded-2xl">
        <img
          src={shoe.images[0]}
          alt={`imagen del zapato ${shoe.name} 1`}
          transition:name={`shoe-image-${shoe.id}`}
        />
      </picture>
      <aside class="flex flex-col gap-4 p-4">
        <h4 class="text-primary/80 text-xl">{shoe.maker}</h4>
        <h2 class="font-rubik text-3xl max-w-150 font-semibold">{shoe.name}</h2>
        <h3 class="text-2xl font-rubik font-bold tracking-widest">
          ${shoe.price}.00
        </h3>
        <div class="flex flex-col gap-4">
          <p class="text-xl text-primary">Lista de Tallas</p>
          <div class="flex gap-2" id="tallas">
            {
              SIZES.map((size) => (
                <button
                  data-size={size}
                  class="bg-white size-14 text-xl rounded-xl cursor-pointer focus:bg-primary focus:text-white focus:-translate-y-1
                hover:bg-primary hover:text-white hover:-translate-y-1 transition"
                >
                  {size}
                </button>
              ))
            }
          </div>
          <Amount client:load />
          <AddToCart
            client:load
            producto={{
              id: shoe.id,
              name: shoe.name,
              price: shoe.price,
              images: shoe.images,
            }}
          />
        </div>
      </aside>
    </div>
  </article>
</Layout>

<script type="module" is:inline>
  const botonesTallas = document.querySelectorAll('#tallas button');

  botonesTallas.forEach((btn) => {
    btn.addEventListener('click', () => {
      const talla = btn.getAttribute('data-size');
      localStorage.setItem('talla', talla);

      // Quitamos Seleccion Anterior
      botonesTallas.forEach((b) => {
        b.classList.remove('bg-primary', 'text-white');
        b.classList.add('bg-white', 'text-primary');
      });

      //Activamos el boton clickeado
      btn.classList.add('bg-primary', 'text-white');
      btn.classList.remove('bg-white', 'text-primary');
    });
  });
</script>
